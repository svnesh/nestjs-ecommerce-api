# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserModel {
  createdAt: DateTime!
  createdBy: String!
  updatedAt: DateTime!
  deletedAt: DateTime!
  id: ID!
  username: String!
  email: String!
  role: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthMutationResponse {
  access_token: String!
  refresh_token: String!
}

type CategoryModel {
  createdAt: DateTime!
  createdBy: String!
  updatedAt: DateTime!
  deletedAt: DateTime!
  id: ID!
  name: String!
  description: String!
}

type ProductModel {
  createdAt: DateTime!
  createdBy: String!
  updatedAt: DateTime!
  deletedAt: DateTime!
  id: ID!
  name: String!
  description: String
  price: Float!
  category: CategoryModel
}

type PaginatedProductsOutput {
  products: [ProductModel!]!
  hasMore: Boolean
}

type Query {
  getUsers: [UserModel!]!
  getUser(id: String!): UserModel
  getProducts(input: GetProductsInput!, filter: ProductFilterInput): PaginatedProductsOutput!
  getProduct(id: String!): ProductModel
  getCategories: [CategoryModel!]!
  getCategory(id: String!): CategoryModel!
}

input GetProductsInput {
  after: String
  limit: Float
}

input ProductFilterInput {
  search: String
  minPrice: Float
  maxPrice: Float
}

type Mutation {
  createUser(createUser: CreateUserDto!): UserModel!
  login(email: String!, password: String!): AuthMutationResponse!
  refreshLogin(userId: String!, refreshToken: String!): AuthMutationResponse!
  logout: Boolean!
  addProduct(addProduct: CreateProductDto!): ProductModel!
  updateProduct(id: String!, updateProduct: CreateProductDto!): ProductModel!
  deleteProduct(id: String!): String!
  createCategory(createCategoryInput: CreateCategoryDto!): CategoryModel!
  updateCategory(updateCategoryInput: UpdateCategoryDto!): CategoryModel!
  removeCategory(id: String!): CategoryModel!
}

input CreateUserDto {
  username: String!
  email: String!
  password: String!
}

input CreateProductDto {
  name: String!
  description: String!
  price: Float!
  categoryId: String!
}

input CreateCategoryDto {
  name: String!
  description: String!
}

input UpdateCategoryDto {
  id: String!
  name: String!
  description: String!
}